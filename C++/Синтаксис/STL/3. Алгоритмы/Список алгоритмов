Алгоритмы

1. adjacent_find	Поиск двух соседних элементов, которые либо равны, либо удовлетворяют указанному условию.

2. all_of	Возвращает значение true, если условие выполняется каждым элементом заданного диапазона.

3. any_of	Возвращает значение true, если условие выполняется хотя бы один раз в указанном диапазоне элементов.

4. binary_search	Проверяет, есть ли в отсортированном диапазоне элемент, равный указанному значению или эквивалентный ему в смысле, заданном двоичным предикатом.

5. clamp	

6. copy	Присваивает значения элементов из исходного диапазона диапазону назначения, выполняя итерации в исходной последовательности элементов и присваивая им новые позиции в прямом направлении.

7. copy_backward	Присваивает значения элементов из исходного диапазона диапазону назначения, выполняя итерации в исходной последовательности элементов и присваивая им новые позиции в обратном направлении.

8. copy_if	Копирует все элементы в заданном диапазоне, возвращающие true для заданного условия

9. copy_n	Копирует указанное количество элементов.

10. count	Возвращает количество элементов в диапазоне, значения которых соответствуют заданному значению.

11. count_if	Возвращает количество элементов в диапазоне, значения которых соответствуют заданному условию.

12. equal	Сравнивает два диапазона поэлементно либо на признак равенства или равноценности в смысле, заданном бинарным предикатом.

13. equal_range	Находит пару позиций в упорядоченном диапазоне; первая из них меньше или равна позиции указанного элемента, а вторая — больше позиции элемента, где суть равноценности или порядка, используемая, чтобы установить позиции в последовательности, может быть задана бинарным предикатом.

14. fill	Присваивает одно и то же новое значение каждому элементу в заданном диапазоне.

15. fill_n	Присваивает новое значение указанному количеству элементов в диапазоне, начиная с определенного элемента.

16. find	Находит позицию первого вхождения элемента с заданным значением в диапазон.

17. find_end	Ищет в диапазоне последнюю подпоследовательность, совпадающую с заданной последовательностью, или эквивалентной согласно условию, заданному двоичным предикатом.

18. find_first_of	Выполняет поиск первого вхождения любого из нескольких значений в заданный диапазон или первого вхождения любого из нескольких элементов, равноценных в смысле, заданном бинарным предикатом, в указанный набор элементов.

19. find_if	Находит позицию первого вхождения элемента, удовлетворяющего определенному условию, в диапазон.

20. find_if_not	Возвращает первый элемент в указанном диапазоне, который не удовлетворяет условию.

21. for_each	Применяет заданный объект функции к каждому элементу в прямом порядке в пределах диапазона и возвращает объект функции.

22. for_each_n	

23. generate	Присваивает значения, создаваемые объектом функции, каждому элементу в диапазоне.

24. generate_n	Присваивает значения, создаваемые объектом функции, указанному количеству элементов в диапазоне и возвращается на позицию, следующую за последним присвоенным значением.

25. includes	Проверяет, содержит ли один отсортированный диапазон все элементы, содержащиеся во втором отсортированном диапазоне, где порядок сортировки или критерий эквивалентности элементов можно задать бинарным предикатом.

26. inplace_merge	Объединяет элементы из двух последовательных упорядоченных диапазонов в один упорядоченный диапазон, где критерий порядка сортировки может быть указан бинарным предикатом.

27. is_heap	Возвращает значение true, если элементы в указанном диапазоне образуют кучу.

28. is_heap_until	Возвращает значение true, если указанный диапазон образует кучу до последнего элемента.

29. is_partitioned	Возвращает значение true, если все элементы в заданном диапазоне, возвращающие true для какого-либо условия, расположены перед всеми элементами, возвращающими false.

30. is_permutation	Определяет, образуют ли элементы в заданном диапазоне допустимую перестановку.

31. is_sorted	Возвращает значение true, если элементы в указанном диапазоне расположены в порядке сортировки.

32. is_sorted_until	Возвращает значение true, если элементы в указанном диапазоне расположены в порядке сортировки.

33. iter_swap	Меняет местами два значения, указанные парой определенных итераторов.

34. lexicographical_compare	Сравнивает две последовательности поэлементно для определения того, какой элемент из двух меньше.

35. lower_bound	Находит позицию первого элемента в упорядоченном диапазоне, значение которого больше или равно указанному значению, где критерий упорядочивания может быть задан бинарным предикатом.

36. make_heap	Преобразует элементы из указанного диапазона в кучу, в которой первый элемент является наибольшим и для которой критерий сортировки может быть определен бинарным предикатом.

37. max	Сравнивает два объекта и возвращает больший из них, где критерий упорядочивания может быть указан бинарным предикатом.

38. max_element	Находит первое вхождение наибольшего элемента в указанном диапазоне, где критерий упорядочивания может быть указан бинарным предикатом.

39. merge	Объединяет все элементы из двух исходных упорядоченных диапазонов в один упорядоченный диапазон назначения, где критерий порядка сортировки может быть указан бинарным предикатом.

40. min	Сравнивает два объекта и возвращает меньший из них, где критерий упорядочивания может быть указан бинарным предикатом.

41. min_element	Находит первое вхождение наименьшего элемента в указанном диапазоне, где критерий упорядочивания может быть указан бинарным предикатом.

42. minmax	Сравнивает два входных параметра и возвращает их в виде пары, в порядке от меньшего к большему.

43. minmax_element	Выполняет работу, которую делают min_element и max_element, в одном вызове.

44. mismatch	Сравнивает два диапазона поэлементно либо на равенство или равноценность в смысле, заданном бинарным предикатом, и находит первую позицию, где наблюдается разница.

45. <alg> move	Перемещает элементы, связанные с заданным диапазоном.

46. move_backward	Перемещает элементы одного итератора в другой. Перемещение начинается с последнего элементом в указанном диапазоне и завершается первым элементом в этом диапазоне.

47. next_permutation	Изменяет порядок элементов в диапазоне, чтобы исходный порядок был заменен перестановкой "лексикографически следующий больший", если такая существует, где смысл термина "следующий" может быть задан бинарным предикатом.

48. none_of	Возвращает значение true, если условие не выполняется ни одним элементом заданного диапазона.


49. nth_element	Разделяет диапазон элементов, правильно находя n-й элемент последовательности в диапазоне, чтобы все элементы перед ним были меньше или равны ему, а все элементы в последовательности после него больше либо равны ему.

50. partial_sort	Упорядочивает указанное число меньших элементов в диапазоне в не нисходящий порядок или согласно критерию упорядочивания, заданному бинарным предикатом.

51. partial_sort_copy	Копирует элементы из исходного диапазона в диапазон назначения, где исходные элементы упорядочены по критерию "меньше либо равно" или согласно другому заданному бинарному предикату.

52. partition	Разделяет элементы диапазона на два непересекающихся множества, при этом элементы, удовлетворяющие унарному предикату, расположены перед теми, которые ему не удовлетворяют.

53. partition_copy	Копирует элементы, возвращающие true для какого-либо условия, в одно место назначения, а возвращающие false — в другое. Эти элементы должны поступать из указанного диапазона.

54. partition_point	Возвращает первый элемент в заданном диапазоне, который не удовлетворяет условию. Элементы сортируются таким образом, чтобы те, которые удовлетворяют условию, приходят до тех, которые не имеют.

55. pop_heap	Удаляет наибольший элемент из начала кучи до позиции, следующей за последней, в диапазоне, а затем формирует новую кучу из оставшихся элементов.

56. prev_permutation	Изменяет порядок элементов в диапазоне, чтобы исходный порядок был заменен перестановкой "лексикографически следующий больший", если такая существует, где смысл термина "следующий" может быть задан бинарным предикатом.

57. push_heap	Добавляет элемент, находящийся в конце диапазона, в существующую кучу, состоящую из предыдущих элементов диапазона.

58. random_shuffle	Выполняет переупорядочивание последовательности N элементов в диапазоне в одном из N! возможных порядков, выбранном случайным образом.

59. remove	Удаляет указанное значение из заданного диапазона без нарушения порядка остальных элементов и возвращает конец нового диапазона после удаления указанного значения.

60. remove_copy	Копирует элементы из исходного диапазона в диапазон назначения, за исключением того, что элементы указанного значения не копируются, не нарушая порядок оставшихся элементов и возвращая конец нового диапазона назначения.

61. remove_copy_if	Копирует элементы из исходного диапазона в диапазон назначения, за исключением того, что выполнение предиката не копируется, не нарушая порядок оставшихся элементов и возвращая конец нового диапазона назначения.

62. remove_if	Удаляет элементы, соответствующие предикату, из заданного диапазона без нарушения порядка остальных элементов и возвращает конец нового диапазона после удаления указанного значения.

63. replace	Проверяет каждый элемент в диапазоне и заменяет его, если он соответствует заданному значению.

64. replace_copy	Проверяет каждый элемент в исходном диапазоне и заменяет его, если он соответствует заданному значению, одновременно копируя результат в новый диапазон назначения.

65. replace_copy_if	Проверяет каждый элемент в исходном диапазоне и заменяет его, если он соответствует заданному предикату, одновременно копируя результат в новый диапазон назначения.

66. replace_if	Проверяет каждый элемент в диапазоне и заменяет его, если он соответствует заданному предикату.

67. reverse	Изменяет порядок элементов в диапазоне на обратный.

68. reverse_copy	Изменяет порядок элементов в исходном диапазоне на обратный, одновременно копируя их в диапазон назначения

69. rotate	Меняет местами элементы в двух соседних диапазонах.

70. rotate_copy	Меняет местами элементы в двух соседних диапазонах в пределах исходного диапазона и копирует результат в диапазон назначения.

71. sample	

72. search	Выполняет поиск первого вхождения последовательности в целевой диапазон, элементы которого равны указанным в заданной последовательности элементов или элементы которого равноценны в смысле, заданным бинарным предикатом, элементам в заданной последовательности.

73. search_n	Выполняет поиск первой подпоследовательности в диапазоне заданного числа элементов, имеющих определенное значение или связанных с этим значением отношением, указанным бинарным предикатом.

74. set_difference	Объединяет все элементы, принадлежащие одному отсортированному исходному диапазону, но не второму отсортированному исходному диапазону, в один отсортированный диапазон назначения, где критерий упорядочивания может быть указан бинарным предикатом.

75. set_intersection	Объединяет все элементы, входящие в оба исходных упорядоченных диапазона, в один упорядоченный диапазон назначения, где критерий порядка сортировки может быть указан бинарным предикатом.

76. set_symmetric_difference	Объединяет все элементы, входящие в один, но не в оба исходных упорядоченных диапазона, в один упорядоченный диапазон назначения, где критерий порядка сортировки может быть указан бинарным предикатом.

77. set_union	Объединяет все элементы, входящие в хотя бы один из двух исходных упорядоченных диапазонов, в один упорядоченный диапазон назначения, где критерий порядка сортировки может быть указан бинарным предикатом.

78. sort	Упорядочивает элементы в указанном диапазоне в не нисходящем порядке или согласно критерию упорядочивания, заданному бинарным предикатом.

79. shuffle	Перемешивает (изменяет порядок) элементы в указанном диапазоне, используя генератор случайных чисел.

80. sort_heap	Преобразует кучу в упорядоченный диапазон.

81. stable_partition	Разделяет элементы диапазона на два непересекающихся множества, при этом элементы, удовлетворяющие унарному предикату, расположены перед теми, которые ему не удовлетворяют, с сохранением относительного порядка равноценных элементов.

82. stable_sort	Упорядочивает элементы в указанном диапазоне в не нисходящем порядке или согласно критерию упорядочивания, заданному бинарным предикатом, и сохраняет относительный порядок равноценных элементов.

83. swap	Меняет местами значения элементов между двумя типами объектов, присваивая содержимое первого объекта второму объекту, а содержимое второго — первому.

84. swap_ranges	Меняет местами элементы одного диапазона с элементами другого диапазона такого же размера.

85. transform	Применяет заданный объект функции к каждому элементу в исходном диапазоне или к паре элементов из двух исходных диапазонов и копирует возвращаемые значения объекта функции в диапазон назначения.

86. unique	Удаляет повторяющиеся элементы, которые находятся рядом друг с другом в указанном диапазоне.

87. unique_copy	Копирует элементы из исходного диапазона в диапазон назначения, за исключением повторяющихся элементов, которые находятся рядом друг с другом.

88. upper_bound	Находит позицию первого элемента в упорядоченном диапазоне, который имеет значение больше указанного значения, где критерий упорядочивания может быть задан бинарным предикатом.
