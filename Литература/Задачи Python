Уровень 1.
Уровень 1.1
1. Дано число. Проверьте, отрицательное оно или нет. Выведите об этом информацию в консоль. 
2. Дана строка. Выведите в консоль длину этой строки. 
3. Дана строка. Выведите в консоль последний символ строки. 
4. Дано число. Проверьте, четное оно или нет. 
5. Даны два слова. Проверьте, что первые буквы этих слов совпадают. 
6. Дано слово. Получите его последнюю букву. Если слово заканчивается на мягкий знак, то получите предпоследнюю букву. 

Уровень 1.2
1. Дано число. Выведите в консоль первую цифру этого числа.
2. Дано число. Выведите в консоль последнюю цифру этого числа.
3. Дано число. Выведите в консоль сумму первой и последней цифры этого числа.
4. Дано число. Выведите количество цифр в этом числе.
5. Даны два числа. Проверьте, что первые цифры этих чисел совпадают.
6. Дан список:[1, 2, 3, 4, 5, 6]. Получите из него следующий срез: [1, 2, 3].

Уровень 1.3
1. Дана строка. Если в этой строке более одного символа, выведите в консоль предпоследний символ этой строки.
2. Даны два целых числа. Проверьте, что первое число без остатка делится на второе.
3. Дана некоторая строка: 'abcde'. Получите список ее символов: ['a', 'b', 'c', 'd', 'e'].
4. Дан список: [1, 2, 3, 4, 5, 6]. Получите из него следующий срез: [3, 4, 5].
5. Дан словарь с датой:
{
	'year' : '2025',
	'month': '12',
	'day'  : '31',
}
Из элементов этого словаря соберите дату в следующем формате: '2025-12-31'

Уровень 1.4
1. Выведите в консоль все целые числа от 1 до 100.
2. Выведите в консоль все целые числа от -100 до 0.
3. Выведите в консоль все целые числа от 100 до 1.
4. Выведите в консоль все четные числа из промежутка от 1 до 100.
5. Выведите в консоль все числа кратные трем в промежутке от 1 до 100.
6. Дан список: [1, 2, 3, 4, 5, 6]. Получите из него два последних элемента: [5, 6].
7. Дана некоторая строка: 'abcdeabc'. Получите сет ее символов: {'a', 'b', 'c', 'd', 'e'}.

Уровень 1.5
1. Найдите сумму всех целых чисел от 1 до 100.
2. Найдите сумму всех целых четных чисел в промежутке от 1 до 100.
3. Найдите сумму всех целых нечетных чисел в промежутке от 1 до 100.
4. Даны два целых числа. Найдите остаток от деления первого числа на второе.1.
5. Дан список: [1, 2, 3, 4, 5, 6]. Получите из него каждый второй элемент: [1, 3, 5].

Уровень 1.6
1. Дан список с числами: [1, 2, 3, 4, 5]. Найдите сумму элементов этого списка.
2. Дан список с числами: [1, 2, 3, 4, 5]. Найдите сумму квадратов элементов этого списка.
3. Дан список с числами: [1, 2, 3, 4, 5]. Найдите сумму квадратных корней элементов этого списка.
4. Дан список с числами: [1, 2, -3, 4, -5]. Найдите сумму положительных элементов этого списка.
5. Дан список с числами: [-1, 2, -3, 4, 5, 11]. Найдите сумму тех элементов этого списка, которые больше нуля и меньше десяти.
6. Дана некоторая строка: 'abcde'. Переберите и выведите в консоль по очереди все символы с конца строки.

Уровень 1.7
1. Дан словарь:
{
	'a': 1,
	'b': 2,
	'c': 3, 
	'd': 4,
}
Найдите сумму элементов этого словаря.
2. Дан словарь:

{
	'a': 1,
	'b': 2,
	'c': 3, 
	'd': 4,
}
Найдите сумму квадратов элементов этого словаря.
3. Дана строка: 'abcde'. Получите список букв этой строки.
4. Дано некоторое число: 12345. Получите список цифр этого числа.
5. Дано некоторое число: 12345. Переверните его: 54321.
6. Дано некоторое число: 12345. Найдите сумму цифр этого числа.

Уровень 1.8
1. Дан кортеж с числами: (1, 2, 3, 4, 5). Найдите сумму элементов этого кортежа.
2. Дан список с числами: [1, 2, 3, 4, 5, 6]. Увеличьте каждое число из списка на 10 процентов.
3. Дана строка:'abcdef'. Получите первые три символа этой строки: 'abc'.

Уровень 1.9
1. Дана строка: 'abcdef'. Получите три последних символа этой строки: 'def'.
2. Дан словарь с числами:
{
	'a': 1,
	'b': 2,
	'c': 3, 
	'd': 4,
}
Увеличьте каждое число из словаря в 2 раза:
{
	'a': 2,
	'b': 3,
	'c': 6, 
	'd': 8,
}

Уровень 1.10
1. Дана строка: 'abcdef'. Получите каждый второй символ этой строки: 'acf'.
2. Дано некоторое число: 12345. Выведите в консоль все его символы с конца.

Уровень 2.
Уровень 2.1
1. Дан список со строками. Оставьте в этом списке только те строки, которые начинаются на http://.
2. Дана некоторая строка. Найдите позицию первого нуля в строке.
3. Дан список. Удалите из него элементы с заданным значением.
4. Выведите в консоль все числа в промежутке от 10 до 1000, сумма первой и второй цифры которых равна пяти.
5. Дана некоторая строка:'abcdeabc'. Очистите ее от дублей символов: 'abcde'.

Уровень 2.2
1. Дан список с числами. Подсчитайте количество отрицательных чисел в этом списке.
2. Дан список с числами. Оставьте в нем только положительные числа.
3. Дана строка. Удалите предпоследний символ из этой строки.
4. Дан список со строками. Оставьте в этом списке только те строки, которые заканчиваются на .html.
5. Дан список с дробями: [1.456, 2.125, 3.32, 4.1, 5.34]. Округлите эти дроби до одного знака в дробной части.
6. Дан словарь:
{
	'a': 1,
	'b': 2,
	'c': 3, 
	'd': 4,
}
Получите список его значений: [1, 2, 3, 4].

Уровень 2.3
1. Даны два слова. Проверьте, что последняя буква первого слова совпадает с первой буквой второго слова.
2. Дана некоторая строка. Найдите позицию третьего нуля в строке.
3. Даны числа, разделенные запятыми: '12,34,56'. Найдите сумму этих чисел.
4. Дана дата в следующем формате: '2025-12-31'. Преобразуйте эту дату в следующий словарь:
{
	'year' : '2025',
	'month': '12',
	'day'  : '31',
}
5. Дан словарь:
{
	'a': 1,
	'b': 2,
	'c': 3, 
	'd': 4,
}
Получите сет его значений: {1, 2, 3, 4}.

Уровень 2.4
1. Дана некоторая строка с буквами и цифрами. Получите позицию первой цифры в этой строке.
2. Дано число. Выведите в консоль количество четных цифр в этом числе.
3. Дан словарь:
{
	'a': 1,
	'b': 2,
	'c': 3, 
	'd': 4,
}
Получите список его ключей: ['a', 'b', 'c', 'd'].
4. Дана некоторая строка: 'abcde'. Переведите в верхний регистр все нечетные буквы этой строки. В нашем случае должно получится следующее:'AbCdE'.
5. Дана некоторая строка со словами: 'aaa bbb ccc'. Сделайте заглавным первый символ каждого слова в этой строке. В нашем случае должно получится следующее: 'Aaa Bbb Ccc'.
6. Дана дата в следующем формате: '2025-12-31'. Преобразуйте эту дату в следующий кортеж:('31', '12', '2025').

Уровень 2.5
1. Дана некоторая строка, например, вот такая: '023m0df0dfg0'. Получите сет позиций всех нулей в этой в строке.
2. Дана некоторая строка: 'abcdefg'. Удалите из этой строки каждый третий символ. В нашем случае должно получится следующее: 'abdeg'.
3. Дан некоторый список, например, вот такой: [1, 2, 3, 4, 5, 6]. Поделите сумму элементов, стоящих на четных позициях, на сумму элементов, стоящих на нечетных позициях.
4. Дана дата в следующем формате: ['2025', '12', '31']. Преобразуйте эту дату в следующий кортеж: ('31', '12', '2025').

Уровень 2.6
1. Дана некоторая строка с буквами и цифрами. Получите список позиций всех цифр из этой строки.
2. Дана некоторая строка: 'AbCdE'. Смените регистр букв этой строки на противоположный. В нашем случае должно получится следующее: 'aBcDe'.
3. Дан некоторый список с числами, например, вот такой: [1, 2, 3, 4, 5, 6]. Слейте пары элементов вместе: [12, 34, 56].
4. Дана некоторая строка со словами: 'aaa bbb ccc eee fff'. Сделайте заглавным первый символ каждого второго слова в этой строке. В нашем случае должно получится следующее: 'aaa Bbb ccc Eee fff'.

Уровень 2.7
1. Дан символ. Узнайте, в каком регистре этот символ - в верхнем или нижнем.
2. Дано некоторое число, например, такое: 123789. Удалите из этого числа все нечетные цифры. В нашем случае получится такой результат: 28.
3. Дан кортеж с датой: ('2025', '12', '31'). Преобразуйте эту дату в следующий словарь:
{
	'year' : '2025',
	'month': '12',
	'day'  : '31',
}

Уровень 2.8
1. С помощью цикла заполните список целыми числами от 1 до 10.
2. Дана строка с буквами. Проверьте, что в этой строке не более двух заглавных букв.
3. Дан список со строками, содержащими целые числа: ['1', '2', '3', '4', '5']. Преобразуйте элементы этого списка в числа: [1, 2, 3, 4, 5].

Уровень 2.9
1. С помощью цикла заполните список четными числами из промежутка от 1 до 100.
2. Дан список с числами: [1, 2, 3, 4, 5]. Выведите в консоль элементы этого списка в обратном порядке.
3. Даны две строки: txt1 = 'abcde', txt2 = '12345'. Сделайте из этих строк словарь так, чтобы символы первой строки стали ключами, а символы второй строки - значениями:
{
	'a': 1,
	'b': 2,
	'c': 3, 
	'd': 4,
	'e': 5,
}

Уровень 2.10
1. Дана строка с буквами и цифрами. Проверьте, что в этой строке не более трех букв.
2. Дано число. Получите первую четную цифру с конца этого числа.
3. Дана некоторая строка: 'abcde abcde abcde'. Замените в ней первый символ каждого слова на '!': '!bcde !bcde !bcde'
4. Дан список со строками, содержащими целые числа: ['1', '2', '3', '4', '5']. Найдите сумму элементов этого списка.

Уровень 3
Уровень 3.1
1. С помощью включения создайте следующий список: [1, 2, 3, 4, 5, 6]
2. Даны два списка: lst1 = [1, 2, 3], lst2 = [4, 5, 6]. Объедините эти списки в один: [1, 2, 3, 4, 5, 6].
3. Дан некоторый список, например, вот такой: [1, 2, 3, 4, 5, 6]. Найдите сумму первой половины элементов этого списка.

Уровень 3.2
1. С помощью включения создайте следующий список: [1, 3, 5, 7, 9].
2. Даны два кортежа: tpl1 = (1, 2, 3), tpl2 = (4, 5, 6). Объедините эти кортежи в один: (1, 2, 3, 4, 5, 6).
3. Даны два словаря:
dct1 = {
	'a': 1,
	'b': 2,
}
dct2 = {
	'c': 3, 
	'd': 4,
}
Объедините эти словари в один:
{
	'a': 1,
	'b': 2,
	'c': 3, 
	'd': 4,
}
4. Дан некоторый список, например, вот такой: [1, 2, 3, 4, 5, 6]. Поделите сумму первой половины элементов этого списка на сумму второй половины элементов.

Уровень 3.3
1. Дано некоторое число: 1357. Проверьте, что все цифры этого числа являются нечетными.
2. Дано некоторое слово: 'abcba'. Проверьте, что это слово читается одинаково с любой стороны.
3. Даны два сета: st1 = {1, 2, 3}, st2 = {4, 5, 6}. Объедините эти сеты в один: {1, 2, 3, 4, 5, 6}.

Уровень 3.4
1. Дана строка. Удалите из нее все гласные буквы.
2. Даны два сета: st1 = {1, 2, 3, 4, 5}, st2 = {4, 5, 6, 7, 8}. Получите сет их общих элементов: 
{4, 5}.
3. Даны два сета: st1 = {1, 2, 3, 4, 5}, st2 = {4, 5, 6, 7, 8}. Получите сет элементов, входящих только в один из сетов: {1, 2, 3, 6, 7, 8}.

Уровень 3.5
1. Дан текст со словами. Запишите в список все слова, начинающиеся на букву 'a'.
2. Дан список с числами. Проверьте, что все элементы этого списка являются положительными числами.
3. Даны два списка: lst1 = [1, 2, 3, 4, 5], lst2 = [4, 5, 6, 7, 8]. Получите список их общих элементов: [4, 5].
4. Дана некоторая переменная с числом: num = 5. Сделайте строку, содержащую столько нулей, сколько указано в переменной. В нашем случае получится такая строка: '00000'.

Уровень 3.6
1. Дан список со числами. Удалите из него числа, состоящие более чем из трех цифр.
2. Дана строка. Проверьте, что эта строка состоит только из цифр.
3. Дано число, например, вот такое: num = 12345. Проверьте, что все цифры этого числа больше нуля.
4. Даны два списка: lst1 = [1, 2, 3, 4, 5], lst2 = [1, 2, 3]. Проверьте, что все элементы первого списка есть во втором.

Уровень 3.7
1. Дана строка. Сделайте заглавной последнюю букву каждого слова в этой строке.
2. Дана строка. Проверьте, что эта строка состоит только из четных цифр.
3. Даны две строки: txt1 = '12345', txt2 = '45678'. Получите символы, которые есть и в одной, и в другой строке: '45'.
4. Дана некоторая строка: 'a bc def ghij'. Переведите в верхний регистр все подстроки, в которых количество букв меньше или равно трем. В нашем случае должно получится следующее: 
'A BC DEF ghij'

Уровень 3.8
1. Дан список со числами. Проверьте, что все числа из этого списка содержат в себе цифру 3.
2. Через запятую написаны числа. Получите максимальное из этих чисел.
3. Дана строка в формате: 'kebab-case'. Преобразуйте ее в формат: 'snake_case'.
4. Дана строка в формате: 'snake_case'. Преобразуйте ее в формат: 'camelCase'.
5. Дана строка в формате: 'camelCase'. Преобразуйте ее в формат: 'snake_case'.

Уровень 3.9
1. Дан список с числами. Удалите из него числа, имеющие два и более нуля.
2. Найдите все числа от 1 до 1000, сумма цифр которых равна 13. Результат запишите в сет.
3. Дан список: [1, 2, 3]. Сделайте так, чтобы в нем каждый элемент повторился два раза:
[1, 1, 2, 2, 3, 3]
4. Даны два списка: lst1 = [1, 2, 3], lst2 = [4, 5, 6]. Переберите эти списки одним циклом и в каждой итерации выводите их элементы следующим образом:
'1,4'
'2,5'
'3,6'

Уровень 3. 10
1. Дан список и число. Оставьте в списке только те числа, которые являются делителями заданного числа.
2. Дан список с числами. После каждого однозначного числа вставьте еще такое же.
3. Даны два числа. Получите список цифр, которые есть и в одном, и во втором числе.
4. Дано число. Получите список позицией всех цифр 3 в этом числе, за исключением первой и последней.
5. Дан список со числами. Оставьте в нем числа, состоящие из разных цифр, а остальные удалите.
6. Даны два списка: lst1 = [1, 2, 3], lst2 = [1, 2, 3, 4, 5]. Удалите из большего списка лишние элементы с конца так, чтобы длины списков стали одинаковыми.
7. Дан список с некоторыми числами, например, вот такой: [123, 456, 789]. Напишите код, который перевернет числа в этом списке по следующему принципу: [321, 654, 987]

Уровень 4
Уровень 4.1
1. Дано некоторое число. Проверьте, что цифры этого числа расположены по возрастанию.
2. Дан список: [1, '', 2, 3, '', 5]. Удалите из списка все пустые строки.
3. Дан список:
[
	[1, 2, 3],
	[4, 5, 6],
	[7, 8, 9],
]
Выведите в консоль все элементы этого списка.

Уровень 4.2
1. Дано число. Получите список делителей этого числа.
2. Выведите в консоль все числа в промежутке от 10 до 1000, у которых первая цифра четная.
3. Дан список:
[
	[1, 2, 3],
	[4, 5, 6],
	[7, 8, 9],
]
Найдите сумму элементов этого списка.
4. Дан следующий словарь:
dct = {
	1: {
		1: 11,
		2: 12,
		3: 13,
	},
	2: {
		1: 21,
		2: 22,
		3: 23,
	},
	3: {
		1: 24,
		2: 25,
		3: 26,
	},
}
Найдите сумму элементов этого словаря.

Уровень 4.3
1. Дан список. Удалите из него каждый пятый элемент.
2. Даны два числа. Получите список общих делителей этих чисел.
3. Даны два числа: txt1 = 12345, txt2 = 45678. Получите кортеж цифр, которые есть и в одном, и в другом числе: (4, 5).
4. Дан список:
[
	[
		[11, 12, 13],
		[14, 15, 16],
		[17, 17, 19],
	],
	[
		[21, 22, 23],
		[24, 25, 26],
		[27, 27, 29],
	],
	[
		[31, 32, 33],
		[34, 35, 36],
		[37, 37, 39],
	],
]
Найдите сумму элементов этого списка.

Уровень 4.4
1. Дан список с числами. Оставьте в нем только те числа, которые делятся на 5.
2. Дано число. Проверьте, что у этого числа есть только один делитель, кроме него самого и единицы.
3. Дан следующий словарь:
dct = {
	1: {
		1: 11,
		2: 12,
		3: 13,
	},
	2: {
		1: 21,
		2: 22,
		3: 23,
	},
	3: {
		1: 24,
		2: 25,
		3: 26,
	},
}
Найдите сумму элементов этого словаря.

Уровень 4.5
1. Выведите в консоль все числа в промежутке от 10 до 1000, у которых предпоследняя цифра четная.
Дана строка:
'''
	text1
	text2
	text3
	text4
	text5
'''
2. Разбейте эту строку в список так, чтобы каждая непустая линия текста стала отдельным элементом списка:
[
	'text1',
	'text2',
	'text3',
	'text4',
	'text5',
]
3. Дан следующий словарь:
dct = {
	1: {
		1: {
			1: 111,
			2: 112,
			3: 113,
		},
		2: {
			1: 121,
			2: 122,
			3: 123,
		},
	},
	2: {
		1: {
			1: 211,
			2: 212,
			3: 213,
		},
		2: {
			1: 221,
			2: 222,
			3: 223,
		},
	},
	3: {
		1: {
			1: 311,
			2: 312,
			3: 313,
		},
		2: {
			1: 321,
			2: 322,
			3: 323,
		},
	},
}
Найдите сумму элементов этого словаря.

Уровень 4.6
1. Дан список с числами. Оставьте в нем только те числа, которые содержат цифру ноль.
2. Дана следующая структура:
lst = [
	{
		1: 11,
		2: 12,
		3: 13,
	},
	{
		1: 21,
		2: 22,
		3: 23,
	},
	{
		1: 24,
		2: 25,
		3: 26,
	},
];
Найдите сумму элементов этой структуры.

Уровень 4.7
1. Дан список со числами. Проверьте, что в нем есть число, содержащее в себе цифру 3.
2. Дана следующая структура:
lst = [
	{
		1: (1, 2, 3),
		2: (1, 2, 3),
		3: (1, 2, 3),
	},
	{
		1: (1, 2, 3),
		2: (1, 2, 3),
		3: (1, 2, 3),
	},
	{
		1: (1, 2, 3),
		2: (1, 2, 3),
		3: (1, 2, 3),
	},
];
Найдите сумму элементов этой структуры.
3. Дан список:

[
	'text1',
	'text2',
	'text3',
	'text4',
	'text5',
]
Сделайте из этого списка строку так, чтобы каждый элемент списка был на новой линии:
'''
	text1
	text2
	text3
	text4
	text5
'''

Уровень 4.8
1. Сформируйте с помощью циклов следующий список:
[
	['x', 'x', 'x'],
	['x', 'x', 'x'],
	['x', 'x', 'x'],
]
2. Сформируйте с помощью циклов следующий список:
[
	[1, 2, 3],
	[1, 2, 3],
	[1, 2, 3],
	[1, 2, 3],
	[1, 2, 3],
]
3. Дана строка:
'''
	text1
	text2
	
	text3
	text4
	
	text5
'''
Удалите из нее все пустые строки, находящиеся не в начале и не в конце текста:
'''
	text1
	text2
	text3
	text4
	text5
'''

Уровень 4.9
1. Сформируйте с помощью циклов следующий список:
[
	[1, 2, 3],
	[4, 5, 6],
	[7, 8, 9],
]
2. Дан текст:

'''
	a-1
	b-2
	c-3
	d-4
	e-5
'''
Разбейте эту строку в словарь следующим образом:
{
	'a': 1
	'b': 2
	'c': 3
	'd': 4
	'e': 5
}

Уровень 4.10
1. Дан список:
[
	[1, 2, 3],
	[4, 5, 6],
	[7, 8, 9],
]
Слейте элементы этого списка в один одномерный список: [1, 2, 3, 4, 5, 6, 7, 8, 9].
2. Дан список:
[
	[2, 1, 4, 3, 5],
	[3, 5, 2, 4, 1],
	[4, 3, 1, 5, 2],
]
Отсортируйте элементы в каждом подсписке.

Уровень 5
Уровень 5.1
1. Выведите текущую дату в формате год-месяц-день.
2. Попросите пользователя ввести число через консоль. В результате выведите квадратный корень этого числа.
3. Напишите программу, которая сформирует следующую строку: 'xxxxx'
4. Дана некоторая строка со словами: 'aaa bbb ccc eee fff'. Удалите из этой строки каждое второе слово. В нашем случае должно получится следующее: 'aaa ccc fff'.

Уровень 5.2
1. Попросите пользователя ввести дату в формате год-месяц-день. Проверьте, ввел ли он корректное значение.
2. Попросите пользователя ввести целое число через консоль. Проверьте, ввел ли он корректное значение.
3. Напишите программу, которая сформирует следующую строку: '12345'.
4. Дан некоторый список, например, вот такой: [1, 2, 3, 4, 5, 6]. По очереди выведите в консоль подсписки из двух элементов нашего списка:
[1, 2]
[3, 4]
[5, 6]

Уровень 5.3
1. Попросите пользователя ввести два числа целых числа через консоль. Заполните список целыми числами от минимального введенного числа до максимального.
2.Попросите пользователя ввести дату в формате год-месяц-день. Определите день недели, соответствующий этой дате.
3. Попросите пользователя ввести год. Определите, високосный этот год или нет.
4. Напишите программу, которая сформирует следующую строку: '54321'.
5. Дан некоторый список, например, вот такой: [1, 2, 3, 4, 5, 6]. Поменяйте местами пары элементов этого списка: [2, 1, 4, 3, 6, 5].

Уровень 5.4
1. Попросите пользователя ввести целое число через консоль. Получите факториал введенного числа.
2. Напишите программу, которая сформирует следующую строку: '-1-2-3-4-5-'.
3. Дана некоторая строка: '1 22 333 4444 22 5555 1'. Удалите из этой строки все подстроки, в которых количество символов больше трех. В нашем случае должно получится следующее:'1 22 333 22 1'.

Уровень 5.5
1. Попросите пользователя ввести дату рождения в формате год-месяц-день. Определите, сколько полных лет пользователю.
2. Попросите пользователя ввести три числа. Проверьте, что эти числа являются тройкой Пифагора: квадрат самого большого числа должен быть равен сумме квадратов двух остальных.
3. Дано некоторое число: 35142. Отсортируйте цифры этого числа. В нашем случае должно получится следующее: 12345.

Уровень 5.6
1. Попросите пользователя ввести свой email. Проверьте, ввел ли он корректное значение.
2. Попросите пользователя ввести дату в формате год-месяц-день. Определите, была уже дата в текущем году.
3. Дан некоторый список, например, вот такой:
[123, 456, 789]. Слейте все элементы этого списка в один список, разбив их посимвольно:
[1, 2, 3, 4, 5, 6, 7, 8, 9].

Уровень 5.7
1. Попросите пользователя ввести свой номер телефона. Проверьте, ввел ли он корректное значение.
2. Попросите пользователя ввести десять чисел. Сохраните полученные числа в список, а затем получите среднее арифметическое этих чисел и выведите результат.
3. Выведите в консоль даты всех выходных дней текущего года в формате год-месяц-день.
4. Дано некоторое число: 123456. Найдите сумму пар цифр этого числа. В нашем случае имеется ввиду следующее: 12 + 34 + 56.

Уровень 5.8
1. Попросите пользователя ввести год. Получите в список дат всех пятниц 13-е в введенном году.
2. Дана строка со словами. Отсортируйте слова в алфавитном порядке.
3. Дана строка с датой: '2025-2-1'. Напишите код, который при необходимости добавит нули к месяцу и дню: '2025-02-01'.
4. Напишите программу, которая сформирует следующую строку: '-1-2-3-4-5-'.

Уровень 5.9
1. Выведите в консоль название дня недели последнего дня текущего месяца.
2. Дана строка с текстом. Получите процентное содержание каждого символа текста в виде словаря, в котором ключами будут символы, а значениями - их процентное содержание.
3. Дана некоторая строка с числом: '1234567'. Отделите тройки цифр пробелами, начиная с конца числа. В нашем случае должно получится следующее: '1 234 567'.

Уровень 5.10
1. Попросите пользователя ввести две даты в формате год-месяц-день. Определите, сколько дней между введенными датами.
2. Заполните список случайными числами из промежутка от 1 до 100.
3. Напишите программу, которая сформирует следующую строку: '12 34 56 78'.
4. Дан список с числами: [1, 2, 3, 3, 4, 5]. Проверьте, что в этом списке есть два одинаковых элемента подряд.

Уровень 6
Уровень 6.1
1. Сделайте функцию, которая вернет текущий день недели словом.
2. Сделайте функцию, которая параметром будет получать дату, а возвращать день недели словом, соответствующий этой дате.
3. Сделайте функцию, которая параметром будет принимать секунды, а возвращать количество суток, соответствующих этим секундам.
4. Сделайте функцию, которая параметром будет принимать число и строку и обрезать эту строку до длины, заданной первым параметром.
5. Сделайте функцию, которая параметром будет получать дату, а возвращать знак зодиака, соответствующий этой дате.
6. Сделайте функцию, которая параметром будет принимать число, а возвращать сумму его делителей.

Уровень 6.2
1. Сделайте функцию, которая параметром будет принимать число и удалять из него нули.
2. Сделайте функцию, которая будет возвращать сколько дней прошло или осталось до заданной даты в году, в зависимости от того, была уже эта дата или нет.
3. Сделайте функцию, которая вернет список всех високосных годов за предыдущие сто лет.
4. Сделайте функцию, которая параметром будет год и проверять, високосный он или нет.
5. Сделайте функцию, которая будет возвращать сколько дней осталось до конца текущего месяца.
6. Сделайте функцию, которая вернет предыдущий, текущий и следующий дни недели словом в виде следующего словаря:
{
	'next': 'пн',
	'curr': 'вс',
	'prev': 'сб',
}

Уровень 6.3
1. Сделайте функцию, которая параметром будет принимать список и удалять из него все дубли.
2. Сделайте функцию, которая параметром будет принимать список и удалять из него все дубли, которые встречаются больше трех раз.
3. Сделайте функцию, которая параметром будет принимать список и удалять из него одинаковые, рядом стоящие элементы.
4. Сделайте функцию, которая параметром будет принимать список с числами и возвращать максимальное и минимальное значение из этого списка в виде следующего словаря:
{
	'max': 9,
	'min': 1,
}.

Уровень 6.4
1. Сделайте функцию, которая параметром будет принимать число, а количество его делителей.
2. Сделайте функцию, которая параметром будет принимать дату, а возвращать знак зодиака, соответствующий этой дате.
3. Сделайте функцию, которая параметром будет принимать число, а возвращать список его делителей.
4. Сделайте функцию, которая параметром будет принимать число и проверять, простое оно или нет.
5. Сделайте функцию, которая параметром будет принимать число и удалять из него четные цифры.
6. Сделайте функцию, которая заполнит список N случайными числами из заданного промежутка.

Уровень 6.5
1. Дана переменная со строкой. Проверьте, что в эта строка представляет собой число, то есть состоит только из цифр.
2. Дана переменная со строкой. Проверьте, что в эта строка представляет собой дробь.
3. Сделайте функцию, которая параметром будет принимать список с числами и возвращать второе по величине число.
4. Сделайте функцию, которая параметрами будет принимать два числа и возвращать список, заполненный целыми числами от минимального параметра до максимального.
5. Сделайте функцию, которая заполнит список случайными латинскими буквами.
6. Сделайте функцию, которая будет возвращать сумму N первых чисел Фибоначчи.

Уровень 6.6
1. Сделайте функцию, которая параметром будет принимать дату в формате год-месяц-день, и определять, существует ли такая дата или нет.
2. Сделайте функцию, которая сгенерирует строку заданной длины, заполненную случайными латинскими буквами.
3. Сделайте функцию, которая параметром будет получать строку со словами, а возвращать строку в верхнем регистре, состоящую из первых букв слов.
4. Сделайте функцию, которая параметром будет принимать список с числами и заменять каждое число на список его делителей.
5. Сделайте функцию, которая параметром будет принимать секунды, а возвращать количество дней, часов, минут и секунд, соответствующих этим секундам, в виде следующего словаря:

{
	'd': 12,
	'h': 10,
	'm': 59,
	's': 59,
}.

Уровень 6.7
1. Сделайте функцию, которая параметром будет принимать текст со словами, а возвращать текст, в котором эти слова будут отсортированы в алфавитном порядке.
2. Сделайте функцию, которая параметром будет принимать два списка и возвращать список их общих элементов.
3. Сделайте функцию, которая будет возвращать случайное число. Функция не должна возвращать одно и тоже число два раза подряд.
4. Сделайте функцию, которая параметром будет принимать список и элемент и возвращать следующий за ним элемент. Смотрите пример:
lst = [1, 2, 3, 4, 5];
func(lst, 1); // 2
func(lst, 4); // 5
func(lst, 5); // 1

Уровень 6.8
1. Сделайте функцию, которая параметром будет принимать список и возвращать случайный элемент этого списка.
2. Сделайте функцию, которая параметром будет принимать список и возвращать список из N случайных элементов этого списка.
3. Сделайте функцию, которая параметром будет принимать список и возвращать случайный элемент этого списка так, чтобы одинаковые элементы не возвращались два раза подряд.
4. Сделайте функцию, которая будет возвращать список простых чисел из заданного промежутка.
5. Сделайте функцию, которая параметрами будет принимать любое количество чисел, а возвращать их сумму.
6. Сделайте функцию, которая заполнит список N случайными числами из заданного промежутка так, чтобы в списке не было подряд двух одинаковых чисел.
7. Сделайте функцию, которая заполнит список N случайными числами из заданного промежутка так, чтобы числа не повторялись.

Уровень 6.9
1. Сделайте функцию, которая будет возвращать сколько дней осталось до ближайшего 29 февраля.
2. Сделайте функцию, которая будет возвращать дату следующей масленницы, которая празднуется в последнее воскресенье зимы.
3. Сделайте функцию, которая будет возвращать случайный цвет.
4. Сделайте функцию, которая параметром будет принимать список чисел и возвращать список общих делителей всех чисел из переданного списка.
5. Сделайте функцию, которая параметром будет принимать двухмерный список чисел и возвращать список максимальных чисел в каждом подсписке.

Уровень 6.10
1. Сделайте функцию, которая параметром будет принимать букву и проверять, это буква кириллицы или латиницы.
2. Сделайте функцию, которая параметром будет принимать список и перемешивать элементы этого списка в случайном порядке.
3. Дан текст со словами. Запишите все слова этого текста в специальный словарь. Ключами в этом словаре будут буквы, а значениями - списки слов, начинающихся на эти буквы.
4. Сделайте функцию, которая параметром будет принимать число, а возвращать список его делителей, являющихся простыми числами.
5. Сделайте функцию, которая параметром будет принимать слово и возвращать список его слогов.

Уровень 7
Уровень 7.1
1. Дан текстовый файл. Получите количество символов в нем.
2. Попросите пользователя ввести текст через консоль. Запишите введенный текст в какой-нибудь файл.
3. Дан текстовый файл со словами. Напишите программу, которая обернет каждое слово в круглые скобки. Результат запишите в новый файл.
4. Дан текстовый файл со словами и с дробями вида 1/2. Напишите программу, которая обернет каждую дробь в круглые скобки. Результат запишите в новый файл.
5. Напишите программу, которая сформирует следующий список:
[
	[
		[1, 2, 3],
		[1, 2, 3],
		[1, 2, 3],
	],
	[
		[1, 2, 3],
		[1, 2, 3],
		[1, 2, 3],
	],
	[
		[1, 2, 3],
		[1, 2, 3],
		[1, 2, 3],
	],
].

Уровень 7.2
1. Дан текстовый файл. Получите количество букв в нем (т.е. без пробелов, знаков препинаний и т.п.).
2. Создайте текстовый файл, именем которого будет текущая дата в формате год-месяц-день.
3. В файле через запятую написаны числа. Получите максимальное из этих чисел.
4. Дан текстовый файл. Получите список всех его строк.
5. Напишите программу, которая сформирует следующий список:
[
	['x'],
	['x', 'x'],
	['x', 'x', 'x'],
	['x', 'x', 'x', 'x'],
	['x', 'x', 'x', 'x', 'x'],
]

Уровень 7.3
1. Дан текстовый файл. В нем записан текст и встречаются числа. Возведите каждое из этих чисел в квадрат и запишите результат обратно в этот же файл.
2. Дана папка с файлами. Удалите из этой папки все файлы с заданным расширением.
3. Дан список. Запишите элементы этого списка в файл так, чтобы каждый элемент был написан с новой строки.
4. Сделайте функцию, которая будет возвращать список, заполненный N случайными числами из заданного диапазона так, чтобы числа не повторялись.

Уровень 7.4
1. Дан текстовый файл. Запишите в конец его текста текущий момент времени с новой строки.
2. Дана папка с файлами. Получите имена всех картинок из этой папки.
3. Дан текстовый файл. Дана форма с инпутом. В инпут вводится слово. По отправке формы проверьте, есть ли данное слово в файле. Результат выведите в браузер.
4. В папке лежат текстовые файлы. Получите первые N строк текста из каждого файла и запишите результат в новый файл, разделив полученные тексты пустыми строками.
5. Дана папка с файлами. Напишите программу, которая сделает пустыми все текстовые файлы из этой папки.
6. Дан список, содержащий имена файлов. Напишите программу, которая создаст в заданной папке все файлы из списка.
7. Спросите у пользователя число из четного количества цифр. Проверьте, что число представляет собой счастливый билет, то есть сумма половины цифр равна сумме второй половине цифр.
8. Напишите программу, которая сформирует следующий список:
[
	[1],
	[1, 2],
	[1, 2, 3],
	[1, 2, 3, 4, 5],
	[1, 2, 3, 4, 5, 6],
].

Уровень 7.5
1. Дан текстовый файл. Запишите в начало его текста текущий момент времени с новой строки.
2. Дана папка с файлами. Получите список размеров всех файлов из этой папки.
3. Дан список имен папок. Напишите программу, которая создаст в заданной папке подпапки с именами из списка.
4. В файле расположен русский текст. Откройте этот файл, преобразуйте текст в транслит и запишите в новый файл.
5. Напишите программу, которая сформирует следующий список:
[
	['x', 'x', 'x', 'x', 'x'],
	['x', 'x', 'x', 'x'],
	['x', 'x', 'x'],
	['x', 'x'],
	['x'],
].

Уровень 7.6
1. Дан текстовый файл. Получите процентное содержание каждого символа. Результат запишите в новый файл.
2. В файле расположен русский текст. Откройте этот файл, преобразуйте текст в транслит и запишите в новый файл.
3. Дан текстовый файл. Перемешайте в этом файле строки в случайном порядке.
4. Получите список всех возможных счастливых билетов. Билет представляет собой строку из шести цифр, может быть с нулями спереди. Билет считается счастливым, если сумма сумма первых трех цифр равна сумме вторых трех цифр. Запишите полученный список в файл, каждый билет с новой строчки.
5. Напишите программу, которая сформирует следующий список:
[
	'x',
	'xx',
	'xxx',
	'xxxx',
	'xxxxx',
]
6. Дан такой список:
lst = [
	2018: [
		11: [
			29: [1, 2, 3],
			30: [4, 5],
		],
		12: [
			30: [6, 7],
			31: [8, 9],
		],
	],
	2019: [
		12: [
			29: [10, 11],
			30: [12, 13],
			31: [14, 15],
		]
	],
]
Запишите все элементы этого списка в новый список, вот так:
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

Уровень 7.7
1. Дана папка с файлами и подпапками. Получите список имен подпапок из этой папки.
2. Дана папка с файлами и подпапками. Получите имена всех файлов из папок и подпапок.
3. Дан список с числами. Подсчитайте общее количество цифр 3 во всех числах данного списка.
4. Напишите программу, которая сформирует следующий список:
[
	'1',
	'12',
	'123',
	'1234',
	'12345',
]
5. Дан список:
affairs = [
	{
		'date':  '2019-12-29',
		'event': 'name1',
	},
	{
		'date':  '2019-12-31',
		'event': 'name2',
	},
	{
		'date':  '2019-12-29',
		'event': 'name3',
	},
	{
		'date':  '2019-12-30',
		'event': 'name4',
	},
	{
		'date':  '2019-12-29',
		'event': 'name5',
	},
	{
		'date':  '2019-12-31',
		'event': 'name6',
	},
	{
		'date':  '2019-12-29',
		'event': 'name7',
	},
	{
		'date':  '2019-12-30',
		'event': 'name8',
	},
	{
		'date':  '2019-12-30',
		'event': 'name9',
	}
]
Получите из этого списка уникальные даты, то есть вот так:
['2019-12-29', '2019-12-30', '2019-12-31']

Уровень 7.8
1. Дан текстовый файл. Перемешайте в этом файле слова в случайном порядке.
2. Дан текстовый файл. Получите все уникальные слова из этого файла. Результат запишите в новый файл, так, чтобы в каждом ряду стояло по 10 слов, разделенных пробелами.
3. Напишите программу, которая сформирует следующий список:
[
	'1',
	'12',
	'123',
	'1234',
	'12345',
	'1234',
	'123',
	'12',
	'1',
]

Уровень 7.9
1. Дан текстовый файл. Получите количество пустых строк из этого файла.
2. Дан текстовый файл. Проверьте, что в этом файле первое слово каждого предложения начинается с большой буквы.
3. Напишите функцию, которая параметром будет принимать путь к папке, а возвращать количество файлов из этой папки и ее подпапок.
4. Дана папка с файлами и подпапками. Найдите все картинки и переместите их в новую папку. Сделайте так, чтобы все картинки имели уникальные имена.
5. Дан текстовый файл. В нем написан текст, разбитый на предложения. Перемешайте слова в каждом предложении текста и запишите полученный текст в новый файл.
6. Напишите программу, которая сформирует следующую строку: '-1-12-23-34-45-'.
7. Напишите программу, которая сформирует следующий список:
[
	12,
	34,
	56,
	78,
	90,
].

Уровень 7.10
1. Дан текстовый файл. Проверьте, что в этом файле в начале одна пустая строка, а в конце - две пустых строки.
2. Напишите функцию, которая параметром будет принимать путь к папке, а возвращать размер этой папки.
3. Дана папка с файлами и подпапками. Получите пути ко всем файлам из папки и подпапок. Результат запишите в новый файл, каждый путь с новой строки.

4. Дан текстовый файл. В нем написан текст, разбитый на предложения. Перемешайте слова в каждом предложении текста и запишите полученный текст в новый файл.
5. Сделайте функцию, которая будет удалять папку вместе со всем ее содержимым.
6. Напишите программу, которая сформирует следующую строку: '-x-xx-xxx-xx-x-'.
7. Напишите программу, которая сформирует следующую строку:
'11 12 13 21 22 23 31 32 33'

Уровень 8
Уровень 8.1
1. Дан некоторый URL: url = 'http://test.com/dir1/dir2/dir3/page.html'. Получите из него имя домена: 'test.com'.
2. Дан список:
[
	[1, 2, 3],
	[1, 2],
	[1, 2, 3, 4, 5],
	[1],
	[1, 2, 3, 4],
]
Отсортируйте элементы списка по возрастанию количества элементов в подсписке.
3. Дан список:
[
	[2, 4, 5],
	[1, 2, 3],
	[0, 1, 1],
	[5, 7, 1],
]
4.Отсортируйте элементы списка по возрастанию суммы элементов подсписка.
Выведите на экран следующую пирамидку:
x
xx
xxx
xxxx
xxxxx

Уровень. 8.2
1. Дан некоторый URL: url = 'http://test.com/dir1/dir2/dir3/page.html'. Получите из него имя страницы: 'page.html'.
2. Дан список, подсписки которого содержат цифры:
[
	[1, 2, 3],
	[4, 5, 6],
	[7, 8, 9],
]
3. Слейте элементы этого списка в числа: [123, 456, 789].
Выведите на экран следующую пирамидку:
xx
xxxx
xxxxxx
xxxxxxxx
xxxxxxxxxx

Уровни 8.3
1. Дан некоторый URL: url = 'http://test.com/dir1/dir2/dir3/page.html'. Получите из него протокол: 'http'.
2. Дан следующий список: lst = [1, 2, 3, 4, 5, 6]. Дано также число: num = 3. Добавьте в приведенный список столько пустых строк, чтобы длина списка стала равна квадрату числа из переменной.
3. Выведите на экран следующую пирамидку:
111
222
333
444
555
666
777
888
999

Уровень 8.4

1. Дан некоторый URL: url = 'http://test.com/dir1/dir2/dir3/page.html'. Получите из него папки в виде списка: ['dir1', 'dir2', 'dir3'].
2. Выведите на экран следующую пирамидку:
1
22
333
4444
55555
666666
7777777
88888888
999999999
3. Дан список городов и их стран, хранящийся в следующей структуре:
data = [
	{
		'country': 'country1',
		'city':    'city11',
	},
	{
		'country': 'country2',
		'city':    'city21',
	},
	{
		'country': 'country3',
		'city':    'city31',
	},
	{
		'country': 'country1',
		'city':    'city12',
	},
	{
		'country': 'country1',
		'city':    'city13',
	},
	{
		'country': 'country2',
		'city':    'city22',
	},
	{
		'country': 'country3',
		'city':    'city31',
	},
]
Напишите код, которой переделает структуру данных вот в такую:
[
	'country1': {
		'city11', 'city12', 'city13',
	},
	'country2': {
		'city21', 'city22'
	},
	'country3': {
		'city31', 'city32'
	},
]

Уровень 8.5
1. Выведите на экран следующую пирамидку:
1
333
55555
7777777
999999999

Уровень 8.6
1. Дан некоторый URL: url = 'http://test.com/dir1/dir2/dir3/page.html'. Получите содержимое первой папки: 'dir1'.
2. Выведите на экран следующую пирамидку:
xxxxx
xxxx
xxx
xx
x
3. Дан список событий за определенные даты, хранящийся в следующей структуре:
events = [
	{
		'date':  '2019-12-29'
		'event': 'name1'
	},
	{
		'date':  '2019-12-31'
		'event': 'name2'
	},
	{
		'date':  '2019-12-29'
		'event': 'name3'
	},
	{
		'date':  '2019-12-30'
		'event': 'name4'
	},
	{
		'date':  '2019-12-29'
		'event': 'name5'
	},
	{
		'date':  '2019-12-31'
		'event': 'name6'
	},
	{
		'date':  '2019-12-29'
		'event': 'name7'
	},
	{
		'date':  '2019-12-30'
		'event': 'name8'
	},
	{
		'date':  '2019-12-30'
		'event': 'name9'
	},
]
Напишите код, которой переделает структуру данных вот в такую:
{
	'2019-12-29': ['name1', 'name3', 'name5', 'name7'],
	'2019-12-30': ['name4', 'name8', 'name9'],
	'2019-12-31': ['name2', 'name6'],
}

Уровень 8.7
1. Дано слово. Перемешайте буквы этого слова в случайном порядке.
2. Спросите у пользователя число. Получите все возможные варианты разложения этого числа на два множителя.
3. Выведите на экран следующую пирамидку:
999999999
88888888
7777777
666666
55555
4444
333
22
1
4. Дан список событий за определенные даты, хранящийся в следующей структуре:
events = {
	'2019-12-29': ['name1', 'name3', 'name5', 'name7'],
	'2019-12-30': ['name4', 'name8', 'name9'],
	'2019-12-31': ['name2', 'name6'],
}
Напишите код, которой переделает структуру данных вот в такую:
events = [
	{
		'date':  '2019-12-29'
		'event': 'name1'
	},
	{
		'date':  '2019-12-31'
		'event': 'name2'
	},
	{
		'date':  '2019-12-29'
		'event': 'name3'
	},
	{
		'date':  '2019-12-30'
		'event': 'name4'
	},
	{
		'date':  '2019-12-29'
		'event': 'name5'
	},
	{
		'date':  '2019-12-31'
		'event': 'name6'
	},
	{
		'date':  '2019-12-29'
		'event': 'name7'
	},
	{
		'date':  '2019-12-30'
		'event': 'name8'
	},
	{
		'date':  '2019-12-30'
		'event': 'name9'
	},
]

Уровень 8.8
1. Дано число. Проверьте, является ли это число совершенным.
2. Дан список событий за определенные месяцы, хранящийся в следующей структуре:
events = [
						{
		'date':  '2019-12'
		'event': 'name1'
	},
	{
		'date':  '2019-12'
		'event': 'name2'
	},
	{
		'date':  '2019-11'
		'event': 'name3'
	},
	{
		'date':  '2019-11'
		'event': 'name4'
	},
	{
		'date':  '2020-10'
		'event': 'name5'
	},
	{
		'date':  '2020-10'
		'event': 'name6'
	},
	{
		'date':  '2020-11'
		'event': 'name5'
	},
	{
		'date':  '2020-11'
		'event': 'name6'
	},
	{
		'date':  '2020-12'
		'event': 'name7'
	},
	{
		'date':  '2020-12'
		'event': 'name8'
	},
	{
		'date':  '2020-12'
		'event': 'name9'
	},
]
Напишите код, которой переделает структуру данных вот в такую:
{
	2019: {
		11: [список событий],
		12: [список событий],
	},
	2020: {
		10: [список событий],
		11: [список событий],
		12: [список событий],
	}
}

Уровень 8.9
1. Дан такой словарь со списком дел за определенную дату:

affairs = {
	'2019-12-31': ['список дел'],
	'2018-11-29': ['список дел'],
	'2018-11-30': ['список дел'],
	'2018-12-27': ['список дел'],
	'2019-12-29': ['список дел'],
	'2019-12-30': ['список дел'],
	'2018-12-30': ['список дел'],
	'2018-12-31': ['список дел'],
}
Выведите на экран все дела за 2018 год.

Уровень 8.10
1. Спросите у пользователя два числа. Проверьте, являются ли эти числа дружественными или нет.
2. Дан некоторый список:
lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
Дана переменная:
n = 3;
Превратите этот список в двухмерный, по n элементов в подсписке.
3. Дан список:
[
	[1, 2, 3, 4, 5],
	[1, 2, 3],
	[1, 2],
]
Добавьте в каждый подсписок столько пустых строк, чтобы количество элементов в каждом подсписке стало равно количеству элементов в самом длинном подсписке.
4. Дан список каких-то данных за определенные даты, хранящийся в следующей структуре:
data = [
	{
		'year':  2019,
		'month': 11,
		'day': 20,
		'data': ['список с данными']
	},
	{
		'year':  2019,
		'month': 11,
		'day': 21,
		'data': ['список с данными']
	},
	{
		'year':  2019,
		'month': 12,
		'day': 25,
		'data': ['список с данными']
	},
	{
		'year':  2019,
		'month': 12,
		'day': 26,
		'data': ['список с данными']
	},
	{
		'year':  2020,
		'month': 10,
		'day': 29,
		'data': ['список с данными']
	},
	{
		'year':  2020,
		'month': 10,
		'day': 30,
		'data': ['список с данными']
	},
	{
		'year':  2020,
		'month': 11,
		'day': 19,
		'data': ['список с данными']
	},
	{
		'year':  2020,
		'month': 11,
		'day': 20,
		'data': ['список с данными']
	},
]
Напишите код, которой переделает структуру данных в структуру вида:
{
	год1: {
		месяц1: {
			день1: [список данных],
			день2: [список данных],
			день3: [список данных],
		},
		месяц2: {
			день1: [список данных],
			день2: [список данных],
			день3: [список данных],
		}
	},
	год2: {
		месяц1: {
			день1: [список данных],
			день2: [список данных],
			день3: [список данных],
		},
		месяц2: {
			день1: [список данных],
			день2: [список данных],
			день3: [список данных],
		}
	}
}

Уровень 9
Уровень 9.1
1. Дан текст со знаками препинаний. Получите список предложений этого текста.
2. Дана некоторая строка: txt = 'abcde abcde'. В переменной хранятся символы: del = 'abe'. Удалите из строки все указанные в переменной символы. В нашем случае должно получится следующее: 'cd cd'.
3. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Получите список элементов его главной диагонали:
[
	11, 22, 33, 44, 55
].

Уровень 9.2
1. Два числа делятся друг на друга, в результате получается периодическая дробь. Напишите код, который определит период этой дроби.
2. Спросите у пользователя целое число. В ответ выведите разложение этого числа на простые множители.
3. Спросите у пользователя два целых числа. В ответ выведите список всех простых чисел из промежутка, заданном введенными значениями.

Уровень 9.3
1. Дан список со словами. Получите из этого списка случайное слово, начинающееся на заданную букву.
2. Пусть у нас есть дата 22.02.2017. В этой дате 4 двойки. Найдите все даты с 4-мя двойками в текущем столетии.

Уровень 9.4
1.  Дан некоторый URL: $url = 'http://test.com/dir1/dir2/dir3/page.html'. Получите из него последовательный набор папок:
[
	'/dir1/dir2/dir3/',
	'/dir2/dir3/',
	'/dir3/'
]
2. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Получите список элементов его побочной диагонали:
[
	15, 24, 33, 42, 51
].

Уровень 9.5
1. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Обнулите элементы его главной диагонали:

[
	[ 0, 12, 13, 14, 15],
	[21,  0, 23, 24, 25],
	[31, 32,  0, 34, 35],
	[41, 42, 43,  0, 45],
	[51, 52, 53, 54,  0],
]
2. Сделайте функцию, которая будет устанавливать правильную форму существительного после числа. Вот как должна работать эта функция:

func(1, 'яблоко', 'яблока', 'яблок'); // выведет '1 яблоко'
func(2, 'яблоко', 'яблока', 'яблок'); // выведет '2 яблока'
func(3, 'яблоко', 'яблока', 'яблок'); // выведет '3 яблока'
func(4, 'яблоко', 'яблока', 'яблок'); // выведет '4 яблока'
func(5, 'яблоко', 'яблока', 'яблок'); // выведет '5 яблок'

Вот пример для для двухзначных чисел:
func(11, 'яблоко', 'яблока', 'яблок'); // выведет '11 яблок'
func(12, 'яблоко', 'яблока', 'яблок'); // выведет '12 яблок'
func(21, 'яблоко', 'яблока', 'яблок'); // выведет '21 яблоко'
func(23, 'яблоко', 'яблока', 'яблок'); // выведет '23 яблока'

Наша функция должна работать для чисел любой длины:
func(1223421, 'яблоко', 'яблока', 'яблок'); // выведет '1223421 яблоко'

Уровень 9.6
1. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Обнулите элементы, находящиеся ниже главной диагонали:
[
	[11, 12, 13, 14, 15],
	[ 0, 22, 23, 24, 25],
	[ 0,  0, 33, 34, 35],
	[ 0,  0,  0, 44, 45],
	[ 0,  0,  0,  0, 55],
]
2. Дан некоторый URL: $url = 'http://test.com/dir1/dir2/dir3/page.html'. Даны переменные: num = 2, val = 'eee'. Замените в URL папку с номером num на значение val: 'http://test.com/dir1/eee/dir3/page.html'.

Уровень 9.7
Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Обнулите элементы, находящиеся не на диагоналях:
[
	[11,  0,  0,  0, 15],
	[ 0, 22,  0, 24,  0],
	[ 0,  0, 33,  0,  0],
	[ 0, 42,  0, 44,  0],
	[51,  0,  0,  0, 55],
].

Уровень 9.8
1. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Переставьте местами два заданных ряда:
[
	[51, 52, 53, 54, 55],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[11, 12, 13, 14, 15],
]

Уровень 9.9
1. Дан файл с текстом. Найдите самый часто используемый символ этого текста и выведите его в абзац.
2. Сделайте функцию, которая будет принимать число, а возвращать это число прописью. Пусть функция работает с числами до 999. Смотрите пример: func(123); // выведет 'сто двадцать три'.
3. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Переставьте местами два заданных столбца:
[
	[11, 15, 13, 14, 12],
	[21, 25, 23, 24, 22],
	[31, 35, 33, 34, 32],
	[41, 45, 43, 44, 42],
	[51, 55, 53, 54, 52],
]

Уровень 9.10
1. Напишите код, который определит максимальный уровень вложенности многомерного списка.
2. Дан произвольный двухмерный список:
[
	[11, 32, 13, 44, 55],
	[31, 42, 53, 66, 75],
	[12, 26, 33, 45, 52],
	[15, 22, 35, 64, 57],
	[21, 52, 32, 44, 38],
]
Найдите максимальный и минимальный элементы и поменяйте их местами.

Уровень 10
Уровень10.1
1. Сделайте функцию, которая параметром будет принимать английское существительное в единственном числе и возвращать его во множественном числе.
2. Дан текст со знаками препинаний: 'aaa bbb, ccc. Xxx - eee bbb, kkk!' Получите список слов из такого текста.
3. Даны два числа. Выведите в консоль процесс умножения этих чисел в столбик, как в школе.
4. Дан произвольный двухмерный список:
[
	[11, 12, 13],
	[21, 22, 23],
	[31, 32, 33],
]
Напишите код, который добавит в список еще один ряд, заполненный случайными значениями:
[
	[11, 12, 13],
	[21, 22, 23],
	[31, 32, 33],
	[41, 42, 43],
]

Уровень 10.2
1. Напишите программу, которая будет находить корни квадратного уравнения. Для этого спросите у пользователя три числа, которые будут коэффициентами уравнения.
2. Выведите в консоль список всех избыточных чисел в заданном промежутке.
3. Дан произвольный двухмерный список:
[
	[11, 12, 13],
	[21, 22, 23],
	[31, 32, 33],
]
Напишите код, который добавит в список еще один столбец, заполненный случайными значениями:
[
	[11, 12, 13, 14],
	[21, 22, 23, 24],
	[31, 32, 33, 34],
]

Уровень 10.3
1. Дан кортеж из шести цифр. Проверьте, можно ли собрать из этих цифр счастливый билет.
2. Напишите код, который будет генерировать пароль заданного размера. Пароль обязательно должен будет содержать маленькую и большую буквы, цифру и какой-то специальный символ.
3. Даны два числа. Выведите на экран процесс деления этих чисел в столбик, как в школе.
4. Дана строка, содержащая два числа и математическую операцию между ними: '10 + 20'. Напишите код, который вычислит результат записанной математической операции.
5. Дан произвольный двухмерный список:
[
	[11, 12, 13],
	[21, 22, 23],
	[31, 32, 33],
]
Напишите код, который добавит в него еще один ряд и еще один столбец, заполненные случайными значениями:
[
	[11, 12, 13, 14],
	[21, 22, 23, 24],
	[31, 32, 33, 34],
	[41, 42, 43, 44],
]

Уровень 10.4
1. Дан текст со словами. Перемешайте все слова этого текста в случайном порядке.
2. Даны два числа. Выведите на экран процесс нахождения НОК, как в школе.
3. Даны два числа. Выведите на экран процесс нахождения НОД, как в школе.
4. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Напишите код, который будет обнулять заданный столбец:
[
	[11, 12,  0, 14, 15],
	[21, 22,  0, 24, 25],
	[31, 32,  0, 34, 35],
	[41, 42,  0, 44, 45],
	[51, 52,  0, 54, 55],
]

Уровень 10.5
1. Дано число. Выведите на экран процесс разложения числа на простые множители, как в школе.
2. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Напишите код, который получит список значений заданного столбца:

[
	13, 23, 33, 43, 54
]
3. Дан многомерный список произвольного уровня вложенности:
[
	'a': [
		'b': [
			'c': '+++'
		]
	],
]
Сделайте функцию, которая будет возвращать элементы объекта, параметром получая строку с ключами объекта, разделенными точками: func('a.b.c'); // вернет '+++'.

Уровень 10.6
1. Сделайте скрипт, генерирующий квадратные уравнения с целыми корнями.
2. Дана строка, содержащая в себе любое количество вложенных парных круглых скобок. Напишите код, который проверит, что скобки расположены корректно. Так корректно: '()()'. Так корректно: '(())'. Так некорректно, так как количество открытых скобок не совпадает с количеством закрытых: '())'. 
Так некорректно, так как, хотя количество открытых скобок и совпадает с количеством закрытых, но у них неправильный порядок: '))(('.

Уровень 10.7
1. Дан инпут. В него вводится длинное слово. Выведите список слов, которые можно составить из букв введенного в инпут слова.
2. Дана строка, содержащая две дроби и математическую операцию между ними: '2/3 + ¾'. Напишите код, который вычислит результат записанной математической операции.
3. Дан произвольный двухмерный список:
[
	[1, 2, 3, 4, 5],
	[1, 2, 3, 4, 5],
	[1, 2, 3, 4, 5],
	[1, 2, 3, 4, 5],
	[1, 2, 3, 4, 5],
]
Получите сумму столбцов этого списка. Результат представьте в виде списка сумм:
[
	5, 10, 15, 20, 25
].

Уровень 10.8
1. Напишите код, который будет проверять сложность пароля. Критерии сложности придумайте самостоятельно.
2. Дан список. Выведите в на экран все варианты перестановки элементов этого списка.
3. Выведите список ul всех дружественных чисел из заданного промежутка.
4 Пусть в файле хранится JSON городов следующего вида:
{
	[
		"id": "1",
		"city": "city1",
		"country": "country1",
	],
	[
		"id": "2",
		"city": "city2",
		"country": "country1",
	],
	[
		"id": "3",
		"city": "city3",
		"country": "country2",
	]
}
Пусть в файле хранится JSON стран следующего вида:
{
	[
		"id": "1",
		"country": "country1",
	],
	[
		"id": "2",
		"country": "country2",
	],
	[
		"id": "3",
		"country": "country3",
	]
}
Напишите скрипт, который вместо стран подставит их id:
{
	[
		"id": "1",
		"city": "city1",
		"country_id": "1",
	],
	[
		"id": "2",
		"city": "city2",
		"country_id": "1",
	],
	[
		"id": "3",
		"city": "city3",
		"country_id": "2",
	]
}

Уровень 10.9
1. Дан текст. Напишите программу, которая отформатирует этот текст так, чтобы в строке текста было не более 70 символов, а потом шел перенос строки. Слова при этом не должны разбиваться.
2. Дан произвольный двухмерный список:
[
	[11, 12, 13],
	[21, 22, 23],
	[31, 32, 33],
]
Дан еще один одномерный список:
[
	14, 24, 34
]
Напишите код, который добавит наш одномерный список в качестве столбца нашего двухмерного:
[
	[11, 12, 13, 14],
	[21, 22, 23, 24],
	[31, 32, 33, 34],
]

Уровень 10.10
1. Дана строка, содержащая в себе дробь: '12/16'. Напишите код, который распишет процесс сокращения дроби, как в школе: '12/16 = 6/8 = ¾'.
2. Реализуйте алгоритм Решето Эратосфена для поиска простых чисел в заданном промежутке.
3. Дан произвольный двухмерный список:
[
	[11, 12, 13, 14, 15],
	[21, 22, 23, 24, 25],
	[31, 32, 33, 34, 35],
	[41, 42, 43, 44, 45],
	[51, 52, 53, 54, 55],
]
Выполните его транспонирование:
[
	[11, 21, 31, 41, 51],
	[12, 22, 32, 42, 52],
	[13, 23, 33, 43, 53],
	[14, 24, 34, 44, 54],
	[15, 25, 35, 45, 55],
].

Источник: https://code.mu/ru/python/tasker/stager/


